{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.0",
        "title": "Health Way App API",
        "description": "API documentation for Healthy Way App BACKEND",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json"],
    "servers": [{ "url": "https://healthy-way-app.onrender.com" }, { "url": "http://localhost:3000" }],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "User",
            "description": "User's endpoints"
        },
        {
            "name": "Diary",
            "description": "User's diary endpoints"
        },
        {
            "name": "Recommended Food",
            "description": "Recommended food endpoints"
        },
        {
            "name": "Statistics",
            "description": "User's statistic endpoints"
        }
    ],
    "paths": {
        "/api/auth/registration": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",
                "parameters": [],
                "security": [],
                "requestBody": {
                    "description": "Registration object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            },
                            "example": {
                                "name": "Dimon",
                                "email": "olexa@gmail.com",
                                "password": "qwerty1234",
                                "goal": "Gain muscle",
                                "gender": "Male",
                                "age": 37,
                                "height": 188,
                                "weight": 100,
                                "activityRatio": 1.55
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful registration",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationResponse"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Bad request (Invalid request body)",
                    "content": {}
                },
                "409": {
                    "description": "Conflict (Email already in use)",
                    "content": {}
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "User's login",
                "parameters": [],

                "requestBody": {
                    "description": "Signin's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            },
                            "example": {
                                "email": "olexa@gmail.com",
                                "password": "qwerty1234"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                },
                                "example": {
                                    "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1N2NmOTc2MDRhY2FiNDNkMTUzZTM2YiIsIm5hbWUiOiJEaW1vbiIsImlhdCI6MTcwMzM4MTU1MywiZXhwIjoxNzA0NTA0NzUzfQ.sI1_2Dz-_qj7fkiZV56Wox_McRryBXHOuJxMuHWDHis",
                                    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1N2NmOTc2MDRhY2FiNDNkMTUzZTM2YiIsIm5hbWUiOiJEaW1vbiIsImlhdCI6MTcwMzM4MTU1MywiZXhwIjoxNzA0NTA0NzUzfQ.0CndNTWlly3xFkWX0JwKaXzn4qouEPc-e8nB1loJUs4",
                                    "user": {
                                        "name": "Dimon",
                                        "email": "olexa@gmail.com"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (Invalid request body)",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (Sorry, your email is not verified...)",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "User logout",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string",
                        "description": "Bearer accessToken"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "204": {
                        "description": "Successful logout",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (Invalid credentials)",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/verify/{verificationToken}": {
            "get": {
                "tags": ["Auth"],
                "summary": "Verify email with verification token",
                "parameters": [
                    {
                        "in": "path",
                        "name": "verificationToken",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verification successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (Invalid token)",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (Invalid token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found (User not found or email was confirmed already)",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/verify": {
            "post": {
                "tags": ["Auth"],
                "summary": "Resend email for user's verification",
                "requestBody": {
                    "description": "Email object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyRequest"
                            },
                            "example": {
                                "email": "olexa@gmail.com"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (This email is verified already!)",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (Invalid token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found (User not found...)",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": ["Auth"],
                "summary": "Forgot user's password",
                "parameters": [],
                "requestBody": {
                    "description": "Email object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyRequest"
                            },
                            "example": {
                                "email": "olexa@gmail.com"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForgotResponse"
                                },
                                "example": {
                                    "message": "Your mew password was send to your email!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (Invalid request body)",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (Invalid token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/change-password": {
            "put": {
                "tags": ["Auth"],
                "summary": "Change user's password",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string",
                        "description": "Bearer accessToken"
                    }
                ],
                "requestBody": {
                    "description": "User's info object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            },
                            "example": {
                                "email": "olexa@gmail.com",
                                "password": "qwerty1234",
                                "newPassword": "1234qwerty"
                            }
                        }
                    }
                },
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Password was changed successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangePasswordResponse"
                                },
                                "example": {
                                    "message": "You change your password successful!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Email or password are incorrect",
                        "content": {}
                    },
                    "403": {
                        "description": "Password change is failed...",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": ["Auth"],
                "summary": "Getting new accessToken & refreshToken",
                "parameters": [],
                "requestBody": {
                    "description": "User's refreshToken",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshRequest"
                            },
                            "example": {
                                "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ODIzY2NhYWUwNjhiMTQwMTZkNTI2MyIsIm5hbWUiOiJManV6aWZlciIsImlhdCI6MTcwMzAzNDE0MywiZXhwIjoxNzA0MTU3MzQzfQ.One4kXthbjqcQpOC5VlZuYxXU9tU7_-WFEqSwCTwd8o"
                            }
                        }
                    }
                },
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful receipt of a new pair of tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshResponse"
                                },
                                "example": {
                                    "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1N2NmOTc2MDRhY2FiNDNkMTUzZTM2YiIsIm5hbWUiOiJEaW1vbiIsImlhdCI6MTcwMzQ1OTU3MCwiZXhwIjoxNzA1MzYwMzcwfQ.M3EqFnk-4qxe-q_jrSJrY_rkyLr-ub0t0QEz3SQsZTo",
                                    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1N2NmOTc2MDRhY2FiNDNkMTUzZTM2YiIsIm5hbWUiOiJEaW1vbiIsImlhdCI6MTcwMzQ1OTU3MCwiZXhwIjoxNzA3MjYxMTcwfQ.WzQcNWz_Rv7GD_PBfwmjV1hgIpSBNHfogTyvJ10cnhI"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            }
        },

        "/api/user/current": {
            "get": {
                "tags": ["User"],
                "summary": "Get current user",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string",
                        "description": "Bearer accessToken"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful getting current user's info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                },
                                "example": {
                                    "data": {
                                        "_id": "657cf97604acab43d153e63b",
                                        "name": "Dimon",
                                        "email": "olexa@gmail.com",
                                        "age": 37,
                                        "gender": "Male",
                                        "height": 188,
                                        "weight": 108,
                                        "goal": "Gain muscle",
                                        "baseWater": 4,
                                        "activityRatio": 1.9,
                                        "fat": 96,
                                        "protein": 269,
                                        "carbohydrate": 592,
                                        "BMR": 4308,
                                        "avatarURL": "https://res.cloudinary.com/dcmbasmpz/image/upload/v1703363919/healthy-way-app/avatars/657cf97604acab43d153e36b.png"
                                    },
                                    "message": "You have all your information!"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/api/user/update": {
            "put": {
                "tags": ["User"],
                "summary": "Update user's information",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string",
                        "description": "Bearer accessToken"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "User's information for update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            },
                            "example": {
                                "name": "Dmytro",
                                "gender": "Male",
                                "age": 37,
                                "weight": 100,
                                "height": 188,
                                "activityRatio": 1.55
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User's information updated successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResponse"
                                },
                                "example": {
                                    "data": {
                                        "name": "Dmytro",
                                        "gender": "Male",
                                        "age": 37,
                                        "weight": 100,
                                        "height": 188,
                                        "activityRatio": 1.55
                                    },
                                    "message": "Updated successfull!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/api/user/load-avatar": {
            "post": {
                "tags": ["User"],
                "summary": "Upload user's avatar",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string",
                        "description": "Bearer accessToken"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Avatar image file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadAvatarRequest"
                            },
                            "example": {
                                "avatar": "[binary content of the image file]"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Avatar uploaded successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadAvatarResponse"
                                },
                                "example": {
                                    "avatarURL": "https://res.cloudinary.com/dcmbasmpz/image/upload/v1703363919/healthy-way-app/avatars/657cf97604acab43d153e36b.png",
                                    "message": "You update your avatar successful!"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (Avatar must be provided)",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Error uploading avatar to File Server",
                        "content": {}
                    }
                }
            }
        },
        "/api/user/goal": {
            "put": {
                "tags": ["User"],
                "summary": "Update user's goal",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string",
                        "description": "Bearer accessToken"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "requestBody": {}
            }
        },

        "/api/user/food-intake": {
            "post": {
                "tags": ["Diary"],
                "summary": "Add food intake for a meal type",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Bearer token for authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Food intake object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Type of meal (e.g., 'breakfast', 'snack', 'dinner', 'lunch')"
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the food product"
                                                },
                                                "carbonohidrates": {
                                                    "type": "number",
                                                    "description": "Carbohydrate content"
                                                },
                                                "protein": {
                                                    "type": "number",
                                                    "description": "Protein content"
                                                },
                                                "fat": {
                                                    "type": "number",
                                                    "description": "Fat content"
                                                },
                                                "calories": {
                                                    "type": "number",
                                                    "description": "Calories content"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 201
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "carbonohidrates": {
                                                                "type": "number"
                                                            },
                                                            "protein": {
                                                                "type": "number"
                                                            },
                                                            "fat": {
                                                                "type": "number"
                                                            },
                                                            "calories": {
                                                                "type": "number"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "totalCalories": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Diary"],
                "summary": "Get user's food intake",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date of food intake",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Bearer token for authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "breakfast": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "english breakfast"
                                                            },
                                                            "carbonohidrates": {
                                                                "type": "number",
                                                                "example": 22
                                                            },
                                                            "protein": {
                                                                "type": "number",
                                                                "example": 22
                                                            },
                                                            "fat": {
                                                                "type": "number",
                                                                "example": 22
                                                            },
                                                            "calories": {
                                                                "type": "number",
                                                                "example": 59
                                                            }
                                                        }
                                                    }
                                                },
                                                "snack": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "carbonohidrates": {
                                                                "type": "number"
                                                            },
                                                            "protein": {
                                                                "type": "number"
                                                            },
                                                            "fat": {
                                                                "type": "number"
                                                            },
                                                            "calories": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "dinner": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "carbonohidrates": {
                                                                "type": "number"
                                                            },
                                                            "protein": {
                                                                "type": "number"
                                                            },
                                                            "fat": {
                                                                "type": "number"
                                                            },
                                                            "calories": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "lunch": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "carbonohidrates": {
                                                                "type": "number"
                                                            },
                                                            "protein": {
                                                                "type": "number"
                                                            },
                                                            "fat": {
                                                                "type": "number"
                                                            },
                                                            "calories": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "totalCalories": {
                                                    "type": "number",
                                                    "example": 120
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/food-intake/{id}": {
            "put": {
                "tags": ["Diary"],
                "summary": "Update food intake for a specific product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the food product to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Bearer token for authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Food product object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Type of meal (e.g., 'breakfast', 'snack', 'dinner', 'lunch')"
                                    },
                                    "product": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the food product"
                                            },
                                            "carbonohidrates": {
                                                "type": "number",
                                                "description": "Carbohydrate content"
                                            },
                                            "protein": {
                                                "type": "number",
                                                "description": "Protein content"
                                            },
                                            "fat": {
                                                "type": "number",
                                                "description": "Fat content"
                                            },
                                            "calories": {
                                                "type": "number",
                                                "description": "Calories content"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "product": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "carbonohidrates": {
                                                            "type": "number"
                                                        },
                                                        "protein": {
                                                            "type": "number"
                                                        },
                                                        "fat": {
                                                            "type": "number"
                                                        },
                                                        "calories": {
                                                            "type": "number"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "totalCalories": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/api/user/recommended-food": {
            "get": {
                "tags": ["Recommended Food"],
                "summary": "Get food recommendations",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Bearer accessToken",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful request. Returns a list of recommended foods.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "name": "Avocado",
                                        "amount": "100 g",
                                        "img": "https://ftp.goit.study/img/you_health/Avocado.png",
                                        "calories": 160,
                                        "nutrition": {
                                            "carbohydrates": 8.5,
                                            "protein": 2,
                                            "fat": 14.7
                                        }
                                    },
                                    {
                                        "name": "Nuts",
                                        "amount": "100 g",
                                        "img": "https://ftp.goit.study/img/you_health/Nuts.png",
                                        "calories": 650,
                                        "nutrition": {
                                            "carbohydrates": 15,
                                            "protein": 22,
                                            "fat": 55
                                        }
                                    }
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/RecommendedFoodResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error. Unable to get food recommendations."
                    }
                }
            }
        },

        "/api/user/statistics": {
            "get": {
                "tags": ["Statistics"],
                "summary": "Get user's statistics",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string",
                        "description": "Bearer accessToken"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "required": true,
                        "type": "string",
                        "description": "Period for stats",
                        "schema": {
                            "type": "string",
                            "enum": ["today", "month", "year"],
                            "example": "month"
                        }
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "required": false,
                        "type": "string",
                        "description": "Getting a specific month's stats",
                        "schema": {
                            "type": "string",
                            "enum": ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
                            "example": "12"
                        }
                    },
                    {
                        "in": "query",
                        "name": "quantity",
                        "required": false,
                        "type": "string",
                        "description": "Getting a number of recent months stats",
                        "schema": {
                            "type": "string",
                            "enum": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                            "example": "4"
                        }
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful getting. Returns a statistics for chosen period.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatisticsResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error. Unable to get statistics."
                    }
                }
            }
        }
    },

    "components": {
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "title": "RegistrationRequest",
                "required": ["name", "email", "password", "goal", "gender", "age", "weight", "height", "activityRatio"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password"
                    },
                    "goal": {
                        "type": "string",
                        "description": "User's goal",
                        "enum": ["Lose Fat", "Gain Muscle", "Maintain"]
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["Male", "Female"]
                    },
                    "age": {
                        "type": "integer",
                        "description": "User's age"
                    },
                    "weight": {
                        "type": "number",
                        "description": "User's weight"
                    },
                    "height": {
                        "type": "number",
                        "description": "User's height"
                    },
                    "activityRatio": {
                        "type": "number",
                        "enum": [1.2, 1.375, 1.55, 1.725, 1.9],
                        "description": "User's activity ratio"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "title": "RegistrationResponse",
                "properties": {
                    "user": {
                        "type": "object",
                        "description": "User information",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Dimon"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email",
                                "example": "olexa@gmail.com"
                            }
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "Successful registration message",
                        "example": "Verification letter is sent on your email"
                    }
                },
                "example": {
                    "user": {
                        "name": "Dimon",
                        "email": "olexa@gmail.com"
                    },
                    "message": "Verification letter is sent on your email"
                }
            },
            "LoginRequest": {
                "type": "object",
                "title": "LoginRequest",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    }
                },
                "required": ["email", "password"]
            },
            "LoginResponse": {
                "type": "object",
                "title": "LoginResponse",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "User's access token"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "User's refresh token"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 2
                            },
                            "email": {
                                "type": "string",
                                "format": "email"
                            }
                        },
                        "required": ["name", "email"]
                    }
                },
                "required": ["accessToken", "refreshToken", "user"]
            },
            "VerifyRequest": {
                "type": "object",
                "title": "VerifyRequest",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email"
                    }
                }
            },
            "VerifyResponse": {
                "type": "object",
                "title": "VerifyResponse",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message about successful confirmation of email"
                    }
                }
            },
            "ForgotResponse": {
                "type": "object",
                "title": "ForgotResponse",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Your mew password was send to your email!"
                    }
                }
            },
            "ChangePasswordRequest": {
                "type": "object",
                "title": "ChangePasswordRequest",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password"
                    },
                    "newPassword": {
                        "type": "string",
                        "description": "New user's password"
                    }
                }
            },
            "ChangePasswordResponse": {
                "type": "object",
                "title": "ChangePasswordResponse",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "You change your password successful!"
                    }
                }
            },
            "RefreshRequest": {
                "type": "object",
                "title": "RefreshRequest",
                "properties": {
                    "refreshToken": {
                        "type": "string",
                        "description": "User's refresh token",
                        "required": true
                    }
                }
            },
            "RefreshResponse": {
                "type": "object",
                "title": "RefreshResponse",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "User's new access token",
                        "required": true
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "User's new refresh token",
                        "required": true
                    }
                }
            },

            "CurrentUserResponse": {
                "type": "object",
                "title": "CurrentUserResponse",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "format": "ObjectId",
                                "description": "User's MongoDB ObjectId"
                            },
                            "name": {
                                "type": "string",
                                "description": "User's name"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "description": "User's email"
                            },
                            "age": {
                                "type": "integer",
                                "description": "User's age"
                            },
                            "gender": {
                                "type": "string",
                                "description": "User's gender"
                            },
                            "height": {
                                "type": "number",
                                "description": "User's height"
                            },
                            "weight": {
                                "type": "number",
                                "description": "User's weight"
                            },
                            "goal": {
                                "type": "string",
                                "description": "User's goal"
                            },
                            "baseWater": {
                                "type": "number",
                                "description": "User's needed base water"
                            },
                            "activityRatio": {
                                "type": "number",
                                "description": "User's activity ratio"
                            },
                            "fat": {
                                "type": "number",
                                "description": "User's needed fat"
                            },
                            "protein": {
                                "type": "number",
                                "description": "User's needed protein"
                            },
                            "carbohydrate": {
                                "type": "number",
                                "description": "User's needed carbohydrate"
                            },
                            "BMR": {
                                "type": "number",
                                "description": "User's BMR level"
                            },
                            "avatarURL": {
                                "type": "string",
                                "description": "User's avatar link"
                            }
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "Successful getting current user's info"
                    }
                }
            },
            "UpdateUserRequest": {
                "type": "object",
                "title": "UpdateUserRequest",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "required": false
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["Male", "Female"],
                        "description": "User's gender",
                        "required": false
                    },
                    "age": {
                        "type": "integer",
                        "description": "User's age",
                        "required": false
                    },
                    "weight": {
                        "type": "number",
                        "description": "User's weight",
                        "required": false
                    },
                    "height": {
                        "type": "number",
                        "description": "User's height",
                        "required": false
                    },
                    "activityRatio": {
                        "type": "number",
                        "enum": [1.2, 1.375, 1.55, 1.725, 1.9],
                        "description": "User's activity ratio",
                        "required": false
                    }
                }
            },
            "UpdateUserResponse": {
                "type": "object",
                "title": "UpdateUserResponse",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "required": true
                            },
                            "gender": {
                                "type": "string",
                                "enum": ["Male", "Female"],
                                "description": "User's gender",
                                "required": true
                            },
                            "age": {
                                "type": "integer",
                                "description": "User's age",
                                "required": true
                            },
                            "weight": {
                                "type": "number",
                                "description": "User's weight",
                                "required": true
                            },
                            "height": {
                                "type": "number",
                                "description": "User's height",
                                "required": true
                            },
                            "activityRatio": {
                                "type": "number",
                                "enum": [1.2, 1.375, 1.55, 1.725, 1.9],
                                "description": "User's activity ratio",
                                "required": true
                            }
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "Successful update user's info"
                    }
                }
            },
            "UploadAvatarRequest": {
                "type": "object",
                "title": "UploadAvatarRequest",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "required": true,
                        "description": "User's avatar file"
                    }
                }
            },
            "UploadAvatarResponse": {
                "type": "object",
                "title": "UploadAvatarResponse",
                "properties": {
                    "avatarURL": {
                        "type": "string",
                        "description": "Uploaded user's avatar link"
                    },
                    "message": {
                        "type": "string",
                        "description": "Uploaded successful!"
                    }
                }
            },

            "WaterIntakeRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Value of water"
                    }
                },
                "description": "Data for updating information about water intake."
            },
            "WaterIntakeResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the response (e.g., 'success')."
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "description": "The date of the water intake."
                            },
                            "value": {
                                "type": "number",
                                "description": "The value of the water intake."
                            }
                        }
                    }
                }
            },
            "WeightRequest": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "number",
                        "description": "Value of weight"
                    }
                },
                "description": "Data for updating information about weight."
            },
            "WeightResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the response (e.g., 'success')."
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "description": "The date of the weight."
                            },
                            "weight": {
                                "type": "number",
                                "description": "The value of the weight."
                            }
                        }
                    }
                }
            },
            "GoalRequest": {
                "type": "object",
                "properties": {
                    "goal": {
                        "type": "string",
                        "description": "Value of goal",
                        "example": "Lose Fat",
                        "enum": ["Lose Fat", "Gain Muscle", "Maintain Weight"]
                    }
                },
                "description": "Data for updating information about goal."
            },
            "GoalResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the response (e.g., 'success')."
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "goal": {
                                "type": "string",
                                "description": "The value of the goal.",
                                "example": "Lose Fat",
                                "enum": ["Lose Fat", "Gain Muscle", "Maintain Weight"]
                            }
                        }
                    }
                }
            },
            "FoodIntakeRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of food"
                    },
                    "product": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the product"
                            },
                            "carbonohidrates": {
                                "type": "number",
                                "description": "Carbonohidrates content"
                            },
                            "protein": {
                                "type": "number",
                                "description": "Protein content"
                            },
                            "fat": {
                                "type": "number",
                                "description": "Fat content"
                            },
                            "calories": {
                                "type": "number",
                                "description": "Calories content"
                            }
                        }
                    },
                    "totalCalories": {
                        "type": "number",
                        "description": "Total calories"
                    }
                },
                "description": "Data for updating information about food intake."
            },
            "FoodIntakeResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the response (e.g., 'success')."
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Type of food"
                            },
                            "product": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the product"
                                    },
                                    "carbonohidrates": {
                                        "type": "number",
                                        "description": "Carbonohidrates content"
                                    },
                                    "protein": {
                                        "type": "number",
                                        "description": "Protein content"
                                    },
                                    "fat": {
                                        "type": "number",
                                        "description": "Fat content"
                                    },
                                    "calories": {
                                        "type": "number",
                                        "description": "Calories content"
                                    }
                                }
                            },
                            "totalCalories": {
                                "type": "number",
                                "description": "Total calories"
                            }
                        }
                    }
                }
            },

            "RecommendedFoodResponse": {
                "type": "object",
                "title": "RecommendedFoodResponse",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the product"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount of the product"
                    },
                    "img": {
                        "type": "string",
                        "description": "Image of the product"
                    },
                    "calories": {
                        "type": "number",
                        "description": "Calories content"
                    },
                    "nutrition": {
                        "type": "object",
                        "properties": {
                            "carbohydrates": {
                                "type": "number",
                                "description": "Quantity of carbonohidrates"
                            },
                            "protein": {
                                "type": "number",
                                "description": "Quantity of protein"
                            },
                            "fat": {
                                "type": "number",
                                "description": "Quantity of fat"
                            }
                        }
                    }
                }
            },
            "StatisticsResponse": {
                "type": "object",
                "title": "StatisticsResponse",
                "properties": {
                    "water": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "example": "2023-08-13"
                                },
                                "total": {
                                    "type": "number",
                                    "example": 2800
                                }
                            }
                        }
                    },
                    "weight": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "example": "2023-08-13"
                                },
                                "total": {
                                    "type": "number",
                                    "example": 88
                                }
                            }
                        }
                    },
                    "calories": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "example": "2023-08-13"
                                },
                                "protein": {
                                    "type": "number",
                                    "example": 22
                                },
                                "fat": {
                                    "type": "number",
                                    "example": 88
                                },
                                "carbohydrate": {
                                    "type": "number",
                                    "example": 44
                                },
                                "calories": {
                                    "type": "number",
                                    "example": 55
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
